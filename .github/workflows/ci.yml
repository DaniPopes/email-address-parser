name: Rust

defaults:
  run:
    working-directory: rust-lib

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: echo github ref
      run: echo "${{ github.ref }}"
    
    - name: Install
      run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    
    - name: Build Rust
      run: cargo build --verbose --release
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Build docs
      run: cargo doc --no-deps
    
    - name: test WASM
      run: wasm-pack test --headless --chrome # --firefox # Disabling tests in FF temporarily (refer: https://github.com/rustwasm/wasm-bindgen/issues/2261)
    
    - name: build WASM bundler
      run: wasm-pack build --out-dir ../npm-pkg/dist/bundler
    
    - name: build WASM cjs
      run: wasm-pack build --target nodejs --out-dir ../npm-pkg/dist/cjs
    
    - name: cleanup dist
      run: rm ../npm-pkg/dist/bundler/.gitignore ../npm-pkg/dist/bundler/email_address_parser.d.ts ../npm-pkg/dist/bundler/LICENSE ../npm-pkg/dist/bundler/package.json  ../npm-pkg/dist/bundler/README.md ../npm-pkg/dist/cjs/.gitignore ../npm-pkg/dist/cjs/email_address_parser.d.ts ../npm-pkg/dist/cjs/LICENSE ../npm-pkg/dist/cjs/package.json  ../npm-pkg/dist/cjs/README.md

    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: npm ci
      run: npm ci
      working-directory: ./npm-pkg

    - name: test npm package
      run: npm test
      working-directory: ./npm-pkg

    # publish to crates.io
    - name: crates.io publish
      run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
      if: startsWith(github.ref, 'refs/tags/v')

    # publish to npm
    - name: publish to npm
      run: npm publish
      working-directory: ./npm-pkg
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
